{"version":3,"sources":["webpack:///src/App.vue","webpack:///./src/App.vue?959f","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["App","name","data","pcConfig","iceServers","url","username","credential","offerOptions","offerToReceiveVideo","offerToReceiveAudio","biPeersList","peerList","create_default","pc","localPc1","localPc2","pcMsgTo","remotePc","isStarted","isTeacher","isReady","sendingMsg","activeTab","onlineClients","webrtc","socket","messages","localVideo","remoteVideo1","remoteVideo2","remoteVideo3","localStream","remoteStream","remoteStreamNum","mediaStreamConstraints","video","audio","form","password","methods","getStatus","item","this","userId","startAction","callback","_this","navigator","mediaDevices","getUserMedia","then","stream","gotLocalMediaStream","catch","handleLocalMediaStreamError","$refs","srcObject","window","trace","handleRemoteMediaStreamAdded","event","remoteVideo","other","addEventListener","play","console","log","handleRemoteStreamRemoved","sendPcMessage","PcMessage","from","id","to","emit","pcMsg","signalingMessageCallback","message","_this2","otherId","type","setRemoteDescription","RTCSessionDescription","createAnswer","description","createdAnswerSuccess","setSessionDescriptionError","logError","candidate","RTCIceCandidate","sdpMLineIndex","label","addIceCandidate","err","_this3","setLocalDescription","localDescription","setLocalDescriptionSuccess","createPeerConnection","isCreatedOffer","RTCPeerConnection","isSelf","push","createConnect","_this4","sdpMid","addStream","addStreamToLocalPc","createOffer","createdOfferSuccess","_this5","_this6","desc","arguments","length","undefined","warn","toString","interact","user","_this7","forbidTalk","handleSendMesssage","msg","updateChatMessage","tabClick","leaveRoom","joinRoom","_this8","some","v","$message","lib_default","a","connect","query","room","on","disconnect","close","$confirm","distinguishCancelAndClose","confirmButtonText","cancelButtonText","part","duration","index","findIndex","splice","stopInteract","init","text","trim","now","performance","toFixed","beforeDestroy","k","mounted","selectortype_template_index_0_src_App","render","_vm","_h","$createElement","_c","_self","attrs","staticClass","ref","model","label-width","prop","value","$$v","$set","expression","_v","size","disabled","connected","click","directives","rawName","tab-click","_l","key","staticStyle","color","_s","nativeOn","keyup","$event","_k","keyCode","_e","autoplay","playsinline","controls","float","refInFor","staticRenderFns","src_App","__webpack_require__","normalizeComponent","ssrContext","Vue","use","ElementUI","config","productionTip","el","components","template"],"mappings":"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","file":"static/js/app.2bfd42271c3fed3be64f.js","sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"info\">\n      <el-form ref=\"form\" :model=\"form\" label-width=\"80px\">\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-button type=\"primary\" @click=\"joinRoom\" size=\"small\" :disabled=\"socket && socket.connected\">加入聊天室\n        </el-button>\n        <el-button type=\"primary\" @click=\"leaveRoom\" size=\"small\" :disabled=\"!(socket && socket.connected)\">离开聊天室\n        </el-button>\n        <el-button type=\"primary\" @click=\"startAction\" size=\"small\"\n                   :disabled=\"!(socket && socket.connected && isReady)\">开始采集本地视频\n        </el-button>\n      </el-form>\n    </div>\n    <div class=\"scene\">\n      <head>在线聊天室</head>\n      <div id=\"chat\" v-show=\"socket && socket.connected\">\n        <el-tabs v-model=\"activeTab\" @tab-click=\"tabClick\">\n          <el-tab-pane label=\"聊天\" name=\"chatTab\">\n            <div>\n              <ul class=\"chat-message\">\n                <li v-for=\"(item,index) in messages\" :key=\"index\">\n                  <div v-if=\"item.type === 'sys' \">\n                    <span class=\"el-icon-bell\" style=\"color: yellow;\"></span>\n                    <span>{{item.msg}}</span>\n                  </div>\n                  <div v-else>\n                    <span>{{item.username}}</span>\n                    <span>{{item.msg}}</span>\n                  </div>\n                </li>\n              </ul>\n              <el-input type=\"textarea\" v-model=\"sendingMsg\" @keyup.enter.native=\"handleSendMesssage\"></el-input>\n              <el-button type=\"primary\" size=\"small\" @click=\"handleSendMesssage\">发送</el-button>\n            </div>\n\n          </el-tab-pane>\n          <el-tab-pane :label=\"'用户('+ onlineClients.length +')'\" name=\"userTab\">\n            <ul class=\"clients-list\">\n              <li v-for=\"(item ,index) in onlineClients\" :key=\"index\">\n                <!-- <div> -->\n                  <span>{{item.username}}</span>\n                  <el-button v-if=\"item.userId !== socket.id && isTeacher\" type=\"text\" size=\"mini\"\n                             @click=\"interact(item)\" :disabled=\"getStatus(item)\">互动\n                  </el-button>\n                  <!-- <el-button v-if=\"item.userId !== socket.id && isTeacher\" type=\"text\" size=\"mini\" @click=\"forbidTalk\">\n                    禁言\n                  </el-button> -->\n                <!-- </div> -->\n              </li>\n            </ul>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </div>\n    <div class=\"web-rtc\">\n      <div>\n        <h4>本人</h4>\n        <video autoplay playsinline ref=\"localVideo\" controls id=\"local-video\"></video>\n      </div>\n    </div>\n    <div>\n      <h4>列表渲染</h4>\n      <ul class=\"others\">\n        <li v-for=\"(item, index) in biPeersList\" :key=\"index\">\n          <h4>{{item.other.username}}\n            <el-button type=\"primary\" @click=\"stopInteract(item, index)\" style=\"float:right;\">结束互动</el-button>\n          </h4>\n          <video autoplay playsinline controls :ref=\"'remoteVideo'+item.other.userId\"\n                 :id=\"'remoteVideo'+item.other.userId\"></video>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport io from 'socket.io-client'\n\nexport default {\n  name: 'App',\n  data () {\n    return {\n      pcConfig: {\n        'iceServers': [\n          {\n            'url': 'stun:stun.l.google.com:19302'\n          },\n          {\n            'url': 'turn:81.70.41.251:3478',\n            'username': 'user',\n            'credential': '123456'\n          }\n        ]\n      },\n      offerOptions: {\n        offerToReceiveVideo: 1,\n        offerToReceiveAudio: 1\n      },\n      biPeersList: [],\n      peerList: Object.create(null),\n      pc: null,\n      localPc1: null,\n      localPc2: null,\n      pcMsgTo: {},\n      remotePc: null,\n      isStarted: false,\n      isTeacher: true,\n      isReady: false,\n      sendingMsg: '',\n      activeTab: 'chatTab',\n      onlineClients: [],\n      webrtc: null,\n      socket: null,\n      messages: [],\n      localVideo: null,\n      remoteVideo1: null,\n      remoteVideo2: null,\n      remoteVideo3: null,\n      localStream: null,\n      remoteStream: null,\n      remoteStreamNum: 0,\n      mediaStreamConstraints: {\n        video: true,\n        audio: true\n      },\n      form: {\n        username: '',\n        password: ''\n      }\n    }\n  },\n  methods: {\n    // 获取互动的状态\n    getStatus (item) {\n      return !!this.peerList[item.userId]\n    },\n    // creates local MediaStream.\n    startAction (callback) {\n      navigator.mediaDevices.getUserMedia(this.mediaStreamConstraints).then((stream) => {\n        this.gotLocalMediaStream(stream, callback)\n      }).catch(this.handleLocalMediaStreamError)\n    },\n    gotLocalMediaStream (stream, callback) {\n      this.localVideo = this.$refs.localVideo\n      this.localVideo.srcObject = stream\n      this.localStream = stream\n      window.localStream = stream\n      if (callback && typeof callback === 'function') {\n        callback && callback()\n      }\n      this.trace('Received local stream.')\n    },\n    handleRemoteMediaStreamAdded (pc, event) {\n      pc.remoteStream = event.stream\n      let remoteVideo = this.$refs['remoteVideo' + pc.other.userId][0]\n      remoteVideo.srcObject = event.stream\n      remoteVideo.addEventListener('loadedmetadata', () => {\n        remoteVideo.play()\n      })\n      console.log('biPeersList', this.biPeersList)\n      this.remoteStream = event.stream\n      this.trace('Received remote stream from ' + pc.other.username)\n    },\n    handleLocalMediaStreamError () {\n      console.log('本地视频采集出错')\n    },\n    handleRemoteStreamRemoved (pc, event) {\n      this.trace('Remote stream  removed event', pc.other.username)\n    },\n    sendPcMessage (PcMessage) {\n      let from = {userId: this.socket.id, username: this.form.username}\n      let to = this.pcMsgTo\n      this.socket.emit('pc message', {from, to, pcMsg: PcMessage})\n    },\n    // A和B建立连接，A和C建立连接，收到的B和C的消息需要进行区分\n    signalingMessageCallback (message) {\n      let otherId = message.from.userId // 对方的id\n      let pc = this.peerList[otherId]\n      message = message.pcMsg\n      if (message.type === 'offer') {\n        console.log('signalingMessageCallback offer', message)\n        pc.setRemoteDescription(new RTCSessionDescription(message)).then(() => {\n          pc.createAnswer()\n            .then((description) => this.createdAnswerSuccess(pc, description))\n            .catch(this.setSessionDescriptionError)\n        }).catch(this.logError)\n      } else if (message.type === 'answer') {\n        console.log('收到了answer')\n        console.log('pc', pc)\n        pc.setRemoteDescription(new RTCSessionDescription(message), function () {\n        }, this.logError)\n      } else if (message.type === 'candidate') {\n        let candidate = new RTCIceCandidate({\n          sdpMLineIndex: message.label,\n          candidate: message.candidate\n        })\n        pc.addIceCandidate(candidate).catch(err => {\n          console.log('addIceCandidate-error', err)\n        })\n      }\n    },\n    createdAnswerSuccess (pc, description) {\n      pc.setLocalDescription(description).then(() => {\n        this.sendPcMessage(pc.localDescription)\n        this.setLocalDescriptionSuccess(description, 'answer')\n        this.trace('local answer psd set.')\n      }).catch(this.setSessionDescriptionError)\n    },\n    // 创建对等连接\n    createPeerConnection (isCreatedOffer, data) {\n      let other = isCreatedOffer ? data.to : data.from // 对方\n      if (!this.peerList[other.userId]) {\n        let pc = new RTCPeerConnection(this.pcConfig)\n        pc.from = data.from\n        pc.to = data.to\n        pc.isSelf = isCreatedOffer // 是否是自己发起\n        pc.other = isCreatedOffer ? data.to : data.from // 对方\n        this.peerList[other.userId] = pc\n        this.biPeersList.push(pc)\n        this.createConnect(isCreatedOffer, pc)\n      }\n    },\n    createConnect (isCreatedOffer, pc) {\n      pc.addEventListener('icecandidate', event => {\n        console.log('icecandidate event:', event)\n        if (event.candidate) {\n          this.sendPcMessage({\n            type: 'candidate',\n            label: event.candidate.sdpMLineIndex,\n            id: event.candidate.sdpMid,\n            candidate: event.candidate.candidate\n          })\n        } else {\n          console.log('End of candidates.')\n        }\n      })\n      if (this.localStream) {\n        pc.addStream((this.localStream))\n      } else {\n        this.startAction(this.addStreamToLocalPc(pc))\n      }\n      pc.addEventListener('addstream', (event) => {\n        console.log('addstream')\n        this.handleRemoteMediaStreamAdded(pc, event)\n      })\n      pc.addEventListener('removestream', (event) => {\n        return this.handleRemoteStreamRemoved(pc, event)\n      })\n      // 创建offer,生成本地会话描述,如果是视频接收方，不需要生成offer\n      if (isCreatedOffer) {\n        pc.createOffer(this.offerOptions).then((description) => this.createdOfferSuccess(pc, description)).catch(this.logError)\n      }\n    },\n    addStreamToLocalPc (pc) {\n      return () => {\n        pc.addStream((this.localStream))\n      }\n    },\n    // 创建offer,生成本地会话描述\n    createdOfferSuccess (pc, description) {\n      // 用sd生成localPc的本地描述，remotePc的远程描述\n      pc.setLocalDescription(description)\n        .then(() => {\n          this.sendPcMessage(pc.localDescription)\n          this.setLocalDescriptionSuccess(description, 'offer')\n          this.trace('local offer psd set.')\n        }).catch(this.setSessionDescriptionError)\n    },\n    // 本地会话描述设置成功\n    setLocalDescriptionSuccess (desc, type = 'offer') {\n      // console.log('local desc', desc);\n      // this.trace('setLocalDescription' + type + 'success', desc);\n    },\n    // 会话描述设置失败\n    setSessionDescriptionError (err) {\n      this.trace('set session Description error', err)\n    },\n    logError (err) {\n      if (!err) return\n      if (typeof err === 'string') {\n        console.warn(err)\n      } else {\n        console.warn(err.toString(), err)\n      }\n    },\n    // 开始互动\n    interact (user) {\n      // 开启互动之前,需要先开启视频采集\n      if (!this.localStream) {\n        this.startAction(() => {\n          this.socket.emit('interact', {from: {username: this.form.username, userId: this.socket.id}, to: user})\n          this.trace(`${this.form.username}向${user.username}发起了视频互动的请求`)\n        })\n      } else {\n        this.socket.emit('interact', {from: {username: this.form.username, userId: this.socket.id}, to: user})\n        this.trace(`${this.form.username}向${user.username}发起了视频互动的请求`)\n      }\n    },\n    // 禁言\n    forbidTalk () {\n\n    },\n    // 发送消息\n    handleSendMesssage () {\n      if (!this.sendingMsg) {\n        return\n      }\n      let data = {msg: this.sendingMsg, username: this.form.username}\n      this.socket.emit('message', data)\n      this.updateChatMessage(data)\n      this.sendingMsg = ''\n    },\n    tabClick () {\n    },\n    updateChatMessage (data) {\n      this.messages.push(data)\n    },\n    leaveRoom () {\n      this.socket.emit('leave')\n    },\n    joinRoom () {\n      // let url = window.location.origin\n      let url = 'http://81.70.41.251:9000'\n      if (!this.form.username) {\n        this.$message('请输入用户名')\n        return\n      }\n      if (this.onlineClients.some(v => v.username === this.form.username)) {\n        this.$message('用户已经加入')\n        return\n      }\n      let v = this\n      this.socket = io.connect(url, {query: {username: this.form.username, room: 'hello'}})\n      // 其他用户加入聊天室\n      this.socket.on('join', (data) => {\n        this.updateChatMessage({msg: data.username + '加入了聊天室', type: 'sys'})\n      })\n      // 自己加入成功\n      this.socket.on('joined', () => {\n        console.log('i joined th room')\n        // this.updateChatMessage();\n      })\n      this.socket.on('ready', () => {\n        this.isReady = true\n      })\n      // 自己离开了\n      this.socket.on('left', () => {\n        this.socket.disconnect()\n        this.messages = []\n        this.onlineClients = []\n      })\n      // 别人离开了\n      this.socket.on('leave', data => {\n        this.updateChatMessage({msg: data.username + '离开了聊天室', type: 'sys'})\n        if (this.biPeersList[data.userId]) {\n          this.biPeersList[data.userId].close()\n          delete this.biPeersList[data.userId]\n        }\n      })\n      // 更新在线人数列表\n      this.socket.on('clients', (data) => {\n        console.log('clients', data)\n        v.onlineClients = data\n      })\n      this.socket.on('pc message', (data) => {\n        this.trace('客户端收到了pc的消息', data)\n        this.signalingMessageCallback(data)\n      })\n      // 收到别人发的聊天信息\n      this.socket.on('message', data => {\n        this.updateChatMessage(data)\n      })\n      // 收到别人的要求视频互动的私信\n      this.socket.on('interact', data => {\n        this.$confirm(`${data.from.username}想和你视频互动，请接受`, '提示信息', {\n          distinguishCancelAndClose: true,\n          confirmButtonText: '接受',\n          cancelButtonText: '拒绝'\n        })\n          .then(() => {\n            // 同意和对方互动, 对方发起，自己接受\n            this.socket.emit('agree interact', data)\n            this.pcMsgTo = data.from\n            this.createPeerConnection(false, data)\n          })\n          .catch(() => {\n            // 拒绝和对方互动\n            this.socket.emit('refuse interact', data)\n          })\n      })\n      // 对方同意了了和你视频互动，自己发起，对方接受\n      this.socket.on('agree interact', data => {\n        this.$message({type: 'success', message: `${data.to.username}接受了视频互动的请求`})\n        this.pcMsgTo = data.to\n        this.trace(`${data.to.username}接受了视频互动的请求`)\n        this.createPeerConnection(true, data)\n      })\n      // 对方拒绝了和你视频互动\n      this.socket.on('refuse interact', data => {\n        this.$message({type: 'warning', message: `${data.to.username}拒绝了视频互动的请求`})\n        this.trace(`${data.to.username}拒绝了视频互动的请求`)\n      })\n      // 监听到对方结束互动\n      this.socket.on('stop interact', data => {\n        let part = data.from\n        this.$message({type: 'info', message: `${part.username}停止了和您互动，连接即将断开`, duration: 1500})\n        console.log('this.biPeersList', this.biPeersList)\n        this.peerList[data.from.userId].close()\n        this.peerList[data.from.userId] = null\n        let index = this.biPeersList.findIndex(v => v.other.userId === part.userId)\n        if (index > -1) {\n          this.biPeersList[index].close()\n          this.biPeersList.splice(index, 1)\n        }\n      })\n    },\n    stopInteract (item, index) {\n      this.socket.emit('stop interact', {from: {username: this.form.username, userId: this.socket.id}, to: item.other})\n      this.biPeersList.splice(index, 1)\n      this.peerList[item.other.userId].close()\n      this.peerList[item.other.userId] = null\n    },\n    init () {\n      this.localVideo = this.$refs.localVideo\n    },\n    trace (text, data = '') {\n      text = text.trim()\n      const now = (window.performance.now() / 1000).toFixed(3)\n      console.log(now, text, data)\n    }\n  },\n  beforeDestroy () {\n    this.biPeersList = []\n    for (let k in this.peerList) {\n      this.peerList[k].close()\n      this.peerList[k] = null\n    }\n  },\n  mounted () {\n    this.init()\n  }\n\n}\n</script>\n\n<style>\n  ul, li {\n    list-style: none;\n  }\n\n  #app {\n    font-family: 'Avenir', Helvetica, Arial, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    text-align: center;\n    color: #2c3e50;\n    /* margin-top: 60px; */\n    padding:40px;\n  }\n\n  video {\n    width: 320px;\n    height: 240px;\n  }\n\n  .others li {\n    float: left;\n    margin-right: 20px;\n  }\n\n  .info {\n    width: 400px;\n  }\n\n  .web-rtc {\n    width: 320px;\n  }\n\n  .web-rtc video {\n    width: 100%;\n  }\n\n  #chat {\n    width: 400px;\n    height: 400px;\n    padding: 20px;\n    margin-top:20px;\n    border: 1px solid #ccc;\n  }\n  .clients-list {\n    margin:0;\n    padding:0;\n  }\n  .clients-list li{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px dashed #ccc;\n    padding: 10px 0;\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"info\"},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"用户名\",\"prop\":\"username\"}},[_c('el-input',{model:{value:(_vm.form.username),callback:function ($$v) {_vm.$set(_vm.form, \"username\", $$v)},expression:\"form.username\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{model:{value:(_vm.form.password),callback:function ($$v) {_vm.$set(_vm.form, \"password\", $$v)},expression:\"form.password\"}})],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":_vm.socket && _vm.socket.connected},on:{\"click\":_vm.joinRoom}},[_vm._v(\"加入聊天室\\n      \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":!(_vm.socket && _vm.socket.connected)},on:{\"click\":_vm.leaveRoom}},[_vm._v(\"离开聊天室\\n      \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":!(_vm.socket && _vm.socket.connected && _vm.isReady)},on:{\"click\":_vm.startAction}},[_vm._v(\"开始采集本地视频\\n      \")])],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"scene\"},[_c('head',[_vm._v(\"在线聊天室\")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.socket && _vm.socket.connected),expression:\"socket && socket.connected\"}],attrs:{\"id\":\"chat\"}},[_c('el-tabs',{on:{\"tab-click\":_vm.tabClick},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('el-tab-pane',{attrs:{\"label\":\"聊天\",\"name\":\"chatTab\"}},[_c('div',[_c('ul',{staticClass:\"chat-message\"},_vm._l((_vm.messages),function(item,index){return _c('li',{key:index},[(item.type === 'sys' )?_c('div',[_c('span',{staticClass:\"el-icon-bell\",staticStyle:{\"color\":\"yellow\"}}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(item.msg))])]):_c('div',[_c('span',[_vm._v(_vm._s(item.username))]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(item.msg))])])])})),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"textarea\"},nativeOn:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleSendMesssage($event)}},model:{value:(_vm.sendingMsg),callback:function ($$v) {_vm.sendingMsg=$$v},expression:\"sendingMsg\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.handleSendMesssage}},[_vm._v(\"发送\")])],1)]),_vm._v(\" \"),_c('el-tab-pane',{attrs:{\"label\":'用户('+ _vm.onlineClients.length +')',\"name\":\"userTab\"}},[_c('ul',{staticClass:\"clients-list\"},_vm._l((_vm.onlineClients),function(item ,index){return _c('li',{key:index},[_c('span',[_vm._v(_vm._s(item.username))]),_vm._v(\" \"),(item.userId !== _vm.socket.id && _vm.isTeacher)?_c('el-button',{attrs:{\"type\":\"text\",\"size\":\"mini\",\"disabled\":_vm.getStatus(item)},on:{\"click\":function($event){_vm.interact(item)}}},[_vm._v(\"互动\\n                \")]):_vm._e()],1)}))])],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"web-rtc\"},[_c('div',[_c('h4',[_vm._v(\"本人\")]),_vm._v(\" \"),_c('video',{ref:\"localVideo\",attrs:{\"autoplay\":\"\",\"playsinline\":\"\",\"controls\":\"\",\"id\":\"local-video\"}})])]),_vm._v(\" \"),_c('div',[_c('h4',[_vm._v(\"列表渲染\")]),_vm._v(\" \"),_c('ul',{staticClass:\"others\"},_vm._l((_vm.biPeersList),function(item,index){return _c('li',{key:index},[_c('h4',[_vm._v(_vm._s(item.other.username)+\"\\n          \"),_c('el-button',{staticStyle:{\"float\":\"right\"},attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.stopInteract(item, index)}}},[_vm._v(\"结束互动\")])],1),_vm._v(\" \"),_c('video',{ref:'remoteVideo'+item.other.userId,refInFor:true,attrs:{\"autoplay\":\"\",\"playsinline\":\"\",\"controls\":\"\",\"id\":'remoteVideo'+item.other.userId}})])}))])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7f9fa3f9\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7f9fa3f9\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7f9fa3f9\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nVue.use(ElementUI)\nVue.config.productionTip = false\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}